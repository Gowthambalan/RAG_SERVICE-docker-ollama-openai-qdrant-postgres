# services:
#   postgres:
#     image: postgres:16-alpine
#     container_name: rag_postgres
#     restart: always
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     ports:
#       - "5432:5432"
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#     networks:
#       - rag_network

#   qdrant:
#     image: qdrant/qdrant:v1.13.5
#     container_name: rag_qdrant
#     restart: always
#     ports:
#       - "6333:6333"
#       - "6334:6334"
#     environment:
#       QDRANT__SERVICE__API_KEY: ${QDRANT_API_KEY}
#     volumes:
#       - qdrant_data:/qdrant/storage
#     networks:
#       - rag_network

#   api:
#     build: .
#     container_name: rag_api
#     restart: always
#     env_file:
#       - .env
#     ports:
#       - "8000:8000"
#     depends_on:
#       - postgres
#       - qdrant
#     volumes:
#       - "D:/AI Projects/RAG/rag_service/data/pdfs:/data/pdfs"

#     networks:
#       - rag_network

# volumes:
#   pgdata:
#   qdrant_data:

# networks:
#   rag_network:
#     driver: bridge



# services:
#   postgres:
#     image: postgres:16-alpine
#     container_name: rag_postgres
#     restart: always
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     ports:
#       - "5432:5432"
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#     networks:
#       - rag_network

#   qdrant:
#     image: qdrant/qdrant:v1.13.5
#     container_name: rag_qdrant
#     restart: always
#     ports:
#       - "6333:6333"
#       - "6334:6334"
#     environment:
#       QDRANT__SERVICE__API_KEY: ${QDRANT_API_KEY}
#     volumes:
#       - qdrant_data:/qdrant/storage
#     networks:
#       - rag_network

#   ollama:
#     image: ollama/ollama:latest
#     container_name: rag_ollama
#     restart: always
#     ports:
#       - "11434:11434"  # Ollama API port
#     volumes:
#       - ollama_data:/root/.ollama
#     networks:
#       - rag_network
#     # Auto-download the model on first start, then start server
#     env_file:
#       - .env
#     command: >
#       pull ${LLM_QWEN} && ollama server"

#   api:
#     build: .
#     container_name: rag_api
#     restart: always
#     env_file:
#       - .env
#     ports:
#       - "8000:8000"
#     depends_on:
#       - postgres
#       - qdrant
#       - ollama
#     volumes:
#       - "D:/AI Projects/RAG/rag_service/data/pdfs:/data/pdfs"
#     networks:
#       - rag_network

# volumes:
#   pgdata:
#   qdrant_data:
#   ollama_data:

# networks:
#   rag_network:
#     driver: bridge

version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: rag_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - rag_network

  qdrant:
    image: qdrant/qdrant:v1.15.1
    container_name: rag_qdrant
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    environment:
      QDRANT__SERVICE__API_KEY: ${QDRANT_API_KEY}
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - rag_network

  ollama:
    image: ollama/ollama:latest
    container_name: rag_ollama
    restart: always
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rag_network
    env_file:
      - .env


  api:
    build: .
    container_name: rag_api
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - qdrant
      - ollama
    volumes:
      - "D:/AI Projects/RAG/rag_service/data/pdfs:/data/pdfs"
    networks:
      - rag_network

volumes:
  pgdata:
  qdrant_data:
  ollama_data:

networks:
  rag_network:
    driver: bridge
